{
    "bun.runtime": "/usr/local/.bun/bin/bun",
    "bun.debugTerminal.enabled": true,
    "bun.debugTerminal.stopOnEntry": false,
    "php.validate.executablePath": "/Users/vasyan/Library/Application Support/Local/lightning-services/php-8.1.23+0/bin/darwin-arm64/bin/php",
    "files.exclude": {
      "mobile/*": true,
    },
    "files.insertFinalNewline": true,
    "editor.minimap.enabled": false,
    "explorer.autoReveal": true,
    "workbench.colorTheme": "Monokai ST3",
    "workbench.editor.revealIfOpen": true,
    "workbench.editor.enablePreviewFromQuickOpen": true,
    "workbench.editor.enablePreview": true,
    "workbench.preferredDarkColorTheme": "Monokai ST3",
    "workbench.colorCustomizations": { 
      "diffEditor.removedLineBackground": "#1153fb35",
      "diffEditor.insertedLineBackground": "#28fb111e",
      // "mergeEditor.change.background": "#ffffff"
    },
    "editor.tokenColorCustomizations": {
      "[Monokai Pro (Filter Octagon)]": {
        "keywords": "#ff4e8e",
        "textMateRules": [
          {
            "scope": "keyword, storage, invalid, entity.name.tag, meta.tag.sgml.doctyle.html",
            "settings": {
              "foreground": "#ff85b1"
              // "foreground": "#ff4e8e"
            }
          },
        ]
      },
      "textMateRules": [
        {
          "scope": "keyword, storage, invalid, entity.name.tag, meta.tag.sgml.doctyle.html",
          "settings": {
            "foreground": "#ff85b1"
            // "foreground": "#ff4e8e"
          }
        },
      ],
      // "[Monokai Pro (Filter Octagon)]": {
      //   "keywords": {
      //     "foreground": "#eee"
      //   }
      // },
    },
    "editor.suggestOnTriggerCharacters": false,
    "editor.autoClosingBrackets": "beforeWhitespace",
    "editor.autoClosingQuotes": "beforeWhitespace",
    "editor.tabSize": 2,
    "editor.dragAndDrop": false,
    "editor.dropIntoEditor.enabled": false,
    "editor.inlayHints.fontSize": 10,
    "editor.fontSize": 13,
    "editor.lightbulb.enabled": "off",
    "terminal.integrated.fontSize": 14,
    "terminal.integrated.fontFamily": "DejaVuSansM Nerd Font Mono",
    "javascript.preferences.jsxAttributeCompletionStyle": "none",
    "window.autoDetectHighContrast": false,
    // "graphql-config.load.filePath": "./client/.graphqlrc.yml",
    "apollographql.display.showRunInStudioButton": false,
    "keyboard.dispatch": "keyCode",
    "editor.cursorSurroundingLines": 8,
    // "editor.wordSeparators": "`~!@#$%^&*()=+[{]}\\|;:'\",.<>/?",
    "vim.smartRelativeLine": true,
    "vim.easymotion": true,
    "vim.insertModeKeyBindings": [
        {
          "before": ["j", "j"],
          "after": ["<Esc>"]
        },
        {
          "before": ["CapsLock"],
          "after": ["<Esc>"]
        }
      ],
    "vim.visualModeKeyBindings": [
      {
        "before": ["Ctrl+n"],
        "commands": [
          "editor.action.addSelectionToNextFindMatch"
        ]
      },
      {
        "before": ["<leader>", "g", "r"], // Revert hunk
        "commands": ["git.revertSelectedRanges"]
      },
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
      {
        "before": ["<leader>", "s"],
        "commands": ["workbench.action.showAllSymbols"]
      },
      {
        "before": ["<leader>", "'"],
        "commands": [
          "workbench.action.toggleMaximizeEditorGroup"
        ],
        "when": "editorPartMazimizedEditorGroup || editorPartMultipleEditorGroup"
      },
      {
        "before": ["<leader>", "r"],
        "commands": [
          "editor.action.referenceSearch.trigger"
        ]
      },
      {
        "before": ["<leader>", "d"],
        "commands": [
          "editor.action.peekDefinition"
        ]
      },
      {
        "before": ["<leader>", "shift+d"],
        "commands": [
          "editor.action.peekTypeDefinition"
        ]
      },
      {
        "before": ["<leader>", "\\"],
        "commands": [
          "workbench.action.toggleMaximizeEditorGroup"
        ]
      },
      {
        "before": ["<leader>", "t"],
        "commands": [
          "workbench.action.toggleSidebarVisibility"
        ]
      },
      {
        "before": ["<leader>", "i"],
        "commands": [
          "inlineChat.start"
        ],
        "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
      },
      {
        "before": ["<leader>", "g", "p"], // Peek Git diff for the changed line
        "commands": ["editor.action.dirtydiff.next"]
      },
      {
        "before": ["<leader>", "g", "r"], // Revert hunk
        "commands": ["git.revertSelectedRanges"]
      },
      {
        "before": ["<leader>", "g", "j"], // Jump to next Git change
        "commands": ["workbench.action.editor.nextChange"]
      },
      {
        "before": ["<leader>", "g", "k"], // Jump to previous Git change
        "commands": ["workbench.action.editor.previousChange"]
      },
      // {
      //   "before": ["Ctrl+h"],
      //   "commands": [
      //     "workbench.action.previousEditor"
      //   ]
      // },
      // {
      //   "before": ["Ctrl+l"],
      //   "commands": [
      //     "workbench.action.previousEditor"
      //   ]
      // },
      {
        "before": ["<leader>", "l"],
        "commands": [
          ":normal! V:s/ /\n/g<CR>"
        ]
      }
    ],
    "vim.leader": ",",
    // "vim.enableNeovim": true,
    // "vim.neovimPath": "/opt/homebrew/bin/nvim",
    "typescript.referencesCodeLens.enabled": true,
    "typescript.referencesCodeLens.showOnAllFunctions": true,
    "typescript.preferences.importModuleSpecifierEnding": "auto",
    "typescript.tsserver.log": "verbose",
    "typescript.experimental.expandableHover": true,
    // doens't work probably cuz linking all to node_modules/client approach
    // "typescript.preferences.importModuleSpecifier": "project-relative"

    "javascript.preferences.importModuleSpecifier": "non-relative",
    "javascript.preferences.importModuleSpecifierEnding": "minimal",
    "html-css-class-completion.enableEmmetSupport": true,
    "html-css-class-completion.CSSLanguages": [
      "css",
      "sass",
      "scss"
    ],
    "html-css-class-completion.JavaScriptLanguages": [
      "javascript",
      "javascriptreact",
      "typescriptreact"
    ],
    "application.shellEnvironmentResolutionTimeout": 20,
    "errorLens.gutterEmoji": {
      "error": "⚠️"
    },
    "[python]": {
      "diffEditor.ignoreTrimWhitespace": false,
      "gitlens.codeLens.symbolScopes": [
        "!Module"
      ],
      "editor.formatOnType": true,
      "editor.formatOnSave": false,
      "editor.wordBasedSuggestions": "off"
    },
    "github.copilot.enable": {
      "*": true,
      "plaintext": false,
      "markdown": false,
      "scminput": false
    },
    "[typescript]": {
      
    },
    "arduino.useArduinoCli": true,
    "extensions.ignoreRecommendations": true,
    "github.copilot.editor.enableAutoCompletions": false,
    // "prisma.showPrismaDataPlatformNotification": false,
    "diffEditor.ignoreTrimWhitespace": true,
    "workbench.activityBar.location": "hidden",
    "workbench.editor.editorActionsLocation": "hidden",
    "eslint.ignoreUntitled": true,
    // "eslint.quiet": true,
    "window.menuBarVisibility": "toggle",
    "eslint.validate": [
      "javascript",
      "typescript"
    ],
    "editor.accessibilitySupport": "off",
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    },
    "editor.stickyScroll.enabled": false,

    "gitlens.plusFeatures.enabled": false,
    // "gitlens.hovers.currentLine.over": "line",
    "gitlens.modes": {
      "zen": {
        "name": "Zen",
        "statusBarItemName": "Zen",
        "description": "for a zen-like experience, disables many visual features",
        "codeLens": false,
        "currentLine": false,
        "hovers": false,
        "statusBar": false
      },
      "review": {
        "name": "Review",
        "statusBarItemName": "Reviewing",
        "description": "for reviewing code, enables many visual features",
        "codeLens": true,
        "currentLine": true,
        "hovers": true
      }
    },
    "gitlens.codeLens.authors.enabled": false,
    "gitlens.codeLens.recentChange.enabled": false,
    "gitlens.codeLens.enabled": false,
    "gitlens.mode.active": "review",
    // "gitlens.ai.experimental.provider": "openai",
    // "gitlens.ai.experimental.openai.model": "gpt-4-1106-preview",
    "gitlens.currentLine.enabled": false,
    "gitlens.statusBar.enabled": false,
    "gitlens.hovers.enabled": false,
}
